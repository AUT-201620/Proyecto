/**
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.piladsl.pila.impl;

import co.edu.uniandes.piladsl.pila.Expresion;
import co.edu.uniandes.piladsl.pila.ExpresionTerminal;
import co.edu.uniandes.piladsl.pila.Operacion;
import co.edu.uniandes.piladsl.pila.PilaPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expresion</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link co.edu.uniandes.piladsl.pila.impl.ExpresionImpl#getExpresionTerminal <em>Expresion Terminal</em>}</li>
 *   <li>{@link co.edu.uniandes.piladsl.pila.impl.ExpresionImpl#getOperacion <em>Operacion</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ExpresionImpl extends MinimalEObjectImpl.Container implements Expresion
{
  /**
   * The cached value of the '{@link #getExpresionTerminal() <em>Expresion Terminal</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpresionTerminal()
   * @generated
   * @ordered
   */
  protected ExpresionTerminal expresionTerminal;

  /**
   * The cached value of the '{@link #getOperacion() <em>Operacion</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperacion()
   * @generated
   * @ordered
   */
  protected Operacion operacion;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExpresionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PilaPackage.Literals.EXPRESION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExpresionTerminal getExpresionTerminal()
  {
    return expresionTerminal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpresionTerminal(ExpresionTerminal newExpresionTerminal, NotificationChain msgs)
  {
    ExpresionTerminal oldExpresionTerminal = expresionTerminal;
    expresionTerminal = newExpresionTerminal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__EXPRESION_TERMINAL, oldExpresionTerminal, newExpresionTerminal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpresionTerminal(ExpresionTerminal newExpresionTerminal)
  {
    if (newExpresionTerminal != expresionTerminal)
    {
      NotificationChain msgs = null;
      if (expresionTerminal != null)
        msgs = ((InternalEObject)expresionTerminal).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PilaPackage.EXPRESION__EXPRESION_TERMINAL, null, msgs);
      if (newExpresionTerminal != null)
        msgs = ((InternalEObject)newExpresionTerminal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PilaPackage.EXPRESION__EXPRESION_TERMINAL, null, msgs);
      msgs = basicSetExpresionTerminal(newExpresionTerminal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__EXPRESION_TERMINAL, newExpresionTerminal, newExpresionTerminal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operacion getOperacion()
  {
    return operacion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOperacion(Operacion newOperacion, NotificationChain msgs)
  {
    Operacion oldOperacion = operacion;
    operacion = newOperacion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__OPERACION, oldOperacion, newOperacion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOperacion(Operacion newOperacion)
  {
    if (newOperacion != operacion)
    {
      NotificationChain msgs = null;
      if (operacion != null)
        msgs = ((InternalEObject)operacion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PilaPackage.EXPRESION__OPERACION, null, msgs);
      if (newOperacion != null)
        msgs = ((InternalEObject)newOperacion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PilaPackage.EXPRESION__OPERACION, null, msgs);
      msgs = basicSetOperacion(newOperacion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__OPERACION, newOperacion, newOperacion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__EXPRESION_TERMINAL:
        return basicSetExpresionTerminal(null, msgs);
      case PilaPackage.EXPRESION__OPERACION:
        return basicSetOperacion(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__EXPRESION_TERMINAL:
        return getExpresionTerminal();
      case PilaPackage.EXPRESION__OPERACION:
        return getOperacion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__EXPRESION_TERMINAL:
        setExpresionTerminal((ExpresionTerminal)newValue);
        return;
      case PilaPackage.EXPRESION__OPERACION:
        setOperacion((Operacion)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__EXPRESION_TERMINAL:
        setExpresionTerminal((ExpresionTerminal)null);
        return;
      case PilaPackage.EXPRESION__OPERACION:
        setOperacion((Operacion)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__EXPRESION_TERMINAL:
        return expresionTerminal != null;
      case PilaPackage.EXPRESION__OPERACION:
        return operacion != null;
    }
    return super.eIsSet(featureID);
  }

} //ExpresionImpl
