/*
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.piladsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PilaGrammarAccess extends AbstractGrammarElementFinder {
	
	public class PagoServicioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.PagoServicio");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEntidadesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cEntidadesEntidadParserRuleCall_0_0 = (RuleCall)cEntidadesAssignment_0.eContents().get(0);
		private final Assignment cServiciosComputoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cServiciosComputoServicioComputoParserRuleCall_1_0 = (RuleCall)cServiciosComputoAssignment_1.eContents().get(0);
		
		//PagoServicio:
		//	entidades+=Entidad+
		//	serviciosComputo+=ServicioComputo*;
		@Override public ParserRule getRule() { return rule; }
		
		//entidades+=Entidad+ serviciosComputo+=ServicioComputo*
		public Group getGroup() { return cGroup; }
		
		//entidades+=Entidad+
		public Assignment getEntidadesAssignment_0() { return cEntidadesAssignment_0; }
		
		//Entidad
		public RuleCall getEntidadesEntidadParserRuleCall_0_0() { return cEntidadesEntidadParserRuleCall_0_0; }
		
		//serviciosComputo+=ServicioComputo*
		public Assignment getServiciosComputoAssignment_1() { return cServiciosComputoAssignment_1; }
		
		//ServicioComputo
		public RuleCall getServiciosComputoServicioComputoParserRuleCall_1_0() { return cServiciosComputoServicioComputoParserRuleCall_1_0; }
	}
	public class EntidadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.Entidad");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntidadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cLLAVEITerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cAtributosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAtributosAtributoParserRuleCall_3_0 = (RuleCall)cAtributosAssignment_3.eContents().get(0);
		private final RuleCall cLLAVEDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Entidad:
		//	'entidad' name=ID LLAVEI atributos+=Atributo* LLAVED;
		@Override public ParserRule getRule() { return rule; }
		
		//'entidad' name=ID LLAVEI atributos+=Atributo* LLAVED
		public Group getGroup() { return cGroup; }
		
		//'entidad'
		public Keyword getEntidadKeyword_0() { return cEntidadKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//LLAVEI
		public RuleCall getLLAVEITerminalRuleCall_2() { return cLLAVEITerminalRuleCall_2; }
		
		//atributos+=Atributo*
		public Assignment getAtributosAssignment_3() { return cAtributosAssignment_3; }
		
		//Atributo
		public RuleCall getAtributosAtributoParserRuleCall_3_0() { return cAtributosAtributoParserRuleCall_3_0; }
		
		//LLAVED
		public RuleCall getLLAVEDTerminalRuleCall_4() { return cLLAVEDTerminalRuleCall_4; }
	}
	public class AtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.Atributo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAtributoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cDOSPTOSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cTipoPrimitivoAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cTipoPrimitivoTipoDatoPrimitivoEnumRuleCall_3_0_0_0 = (RuleCall)cTipoPrimitivoAssignment_3_0_0.eContents().get(0);
		private final Group cGroup_3_0_1 = (Group)cGroup_3_0.eContents().get(1);
		private final RuleCall cLLAVEITerminalRuleCall_3_0_1_0 = (RuleCall)cGroup_3_0_1.eContents().get(0);
		private final Assignment cListaLlaveValorAssignment_3_0_1_1 = (Assignment)cGroup_3_0_1.eContents().get(1);
		private final RuleCall cListaLlaveValorLlaveValorParserRuleCall_3_0_1_1_0 = (RuleCall)cListaLlaveValorAssignment_3_0_1_1.eContents().get(0);
		private final Group cGroup_3_0_1_2 = (Group)cGroup_3_0_1.eContents().get(2);
		private final RuleCall cCOMATerminalRuleCall_3_0_1_2_0 = (RuleCall)cGroup_3_0_1_2.eContents().get(0);
		private final Assignment cListaLlaveValorAssignment_3_0_1_2_1 = (Assignment)cGroup_3_0_1_2.eContents().get(1);
		private final RuleCall cListaLlaveValorLlaveValorParserRuleCall_3_0_1_2_1_0 = (RuleCall)cListaLlaveValorAssignment_3_0_1_2_1.eContents().get(0);
		private final RuleCall cLLAVEDTerminalRuleCall_3_0_1_3 = (RuleCall)cGroup_3_0_1.eContents().get(3);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cListaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cListaEntidadAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cListaEntidadEntidadCrossReference_3_1_1_0 = (CrossReference)cListaEntidadAssignment_3_1_1.eContents().get(0);
		private final RuleCall cListaEntidadEntidadIDTerminalRuleCall_3_1_1_0_1 = (RuleCall)cListaEntidadEntidadCrossReference_3_1_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Keyword cReferenciaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cReferenciaAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cReferenciaIDTerminalRuleCall_3_2_1_0 = (RuleCall)cReferenciaAssignment_3_2_1.eContents().get(0);
		private final RuleCall cPTOCOMATerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Atributo:
		//	'atributo' name=ID DOSPTOS (tipoPrimitivo=TipoDatoPrimitivo (LLAVEI listaLlaveValor+=LlaveValor (COMA
		//	listaLlaveValor+=LlaveValor)* LLAVED)? | 'Lista' listaEntidad=[Entidad] | 'Referencia' referencia=ID) PTOCOMA;
		@Override public ParserRule getRule() { return rule; }
		
		//'atributo' name=ID DOSPTOS (tipoPrimitivo=TipoDatoPrimitivo (LLAVEI listaLlaveValor+=LlaveValor (COMA
		//listaLlaveValor+=LlaveValor)* LLAVED)? | 'Lista' listaEntidad=[Entidad] | 'Referencia' referencia=ID) PTOCOMA
		public Group getGroup() { return cGroup; }
		
		//'atributo'
		public Keyword getAtributoKeyword_0() { return cAtributoKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//DOSPTOS
		public RuleCall getDOSPTOSTerminalRuleCall_2() { return cDOSPTOSTerminalRuleCall_2; }
		
		//(tipoPrimitivo=TipoDatoPrimitivo (LLAVEI listaLlaveValor+=LlaveValor (COMA listaLlaveValor+=LlaveValor)* LLAVED)? |
		//'Lista' listaEntidad=[Entidad] | 'Referencia' referencia=ID)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//tipoPrimitivo=TipoDatoPrimitivo (LLAVEI listaLlaveValor+=LlaveValor (COMA listaLlaveValor+=LlaveValor)* LLAVED)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//tipoPrimitivo=TipoDatoPrimitivo
		public Assignment getTipoPrimitivoAssignment_3_0_0() { return cTipoPrimitivoAssignment_3_0_0; }
		
		//TipoDatoPrimitivo
		public RuleCall getTipoPrimitivoTipoDatoPrimitivoEnumRuleCall_3_0_0_0() { return cTipoPrimitivoTipoDatoPrimitivoEnumRuleCall_3_0_0_0; }
		
		//(LLAVEI listaLlaveValor+=LlaveValor (COMA listaLlaveValor+=LlaveValor)* LLAVED)?
		public Group getGroup_3_0_1() { return cGroup_3_0_1; }
		
		//LLAVEI
		public RuleCall getLLAVEITerminalRuleCall_3_0_1_0() { return cLLAVEITerminalRuleCall_3_0_1_0; }
		
		//listaLlaveValor+=LlaveValor
		public Assignment getListaLlaveValorAssignment_3_0_1_1() { return cListaLlaveValorAssignment_3_0_1_1; }
		
		//LlaveValor
		public RuleCall getListaLlaveValorLlaveValorParserRuleCall_3_0_1_1_0() { return cListaLlaveValorLlaveValorParserRuleCall_3_0_1_1_0; }
		
		//(COMA listaLlaveValor+=LlaveValor)*
		public Group getGroup_3_0_1_2() { return cGroup_3_0_1_2; }
		
		//COMA
		public RuleCall getCOMATerminalRuleCall_3_0_1_2_0() { return cCOMATerminalRuleCall_3_0_1_2_0; }
		
		//listaLlaveValor+=LlaveValor
		public Assignment getListaLlaveValorAssignment_3_0_1_2_1() { return cListaLlaveValorAssignment_3_0_1_2_1; }
		
		//LlaveValor
		public RuleCall getListaLlaveValorLlaveValorParserRuleCall_3_0_1_2_1_0() { return cListaLlaveValorLlaveValorParserRuleCall_3_0_1_2_1_0; }
		
		//LLAVED
		public RuleCall getLLAVEDTerminalRuleCall_3_0_1_3() { return cLLAVEDTerminalRuleCall_3_0_1_3; }
		
		//'Lista' listaEntidad=[Entidad]
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'Lista'
		public Keyword getListaKeyword_3_1_0() { return cListaKeyword_3_1_0; }
		
		//listaEntidad=[Entidad]
		public Assignment getListaEntidadAssignment_3_1_1() { return cListaEntidadAssignment_3_1_1; }
		
		//[Entidad]
		public CrossReference getListaEntidadEntidadCrossReference_3_1_1_0() { return cListaEntidadEntidadCrossReference_3_1_1_0; }
		
		//ID
		public RuleCall getListaEntidadEntidadIDTerminalRuleCall_3_1_1_0_1() { return cListaEntidadEntidadIDTerminalRuleCall_3_1_1_0_1; }
		
		//'Referencia' referencia=ID
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'Referencia'
		public Keyword getReferenciaKeyword_3_2_0() { return cReferenciaKeyword_3_2_0; }
		
		//referencia=ID
		public Assignment getReferenciaAssignment_3_2_1() { return cReferenciaAssignment_3_2_1; }
		
		//ID
		public RuleCall getReferenciaIDTerminalRuleCall_3_2_1_0() { return cReferenciaIDTerminalRuleCall_3_2_1_0; }
		
		//PTOCOMA
		public RuleCall getPTOCOMATerminalRuleCall_4() { return cPTOCOMATerminalRuleCall_4; }
	}
	public class LlaveValorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.LlaveValor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLlaveAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLlaveINTTerminalRuleCall_0_0 = (RuleCall)cLlaveAssignment_0.eContents().get(0);
		private final RuleCall cIGUALTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cValorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValorCADENA_LITERALTerminalRuleCall_2_0 = (RuleCall)cValorAssignment_2.eContents().get(0);
		
		//LlaveValor:
		//	llave=INT IGUAL valor=CADENA_LITERAL;
		@Override public ParserRule getRule() { return rule; }
		
		//llave=INT IGUAL valor=CADENA_LITERAL
		public Group getGroup() { return cGroup; }
		
		//llave=INT
		public Assignment getLlaveAssignment_0() { return cLlaveAssignment_0; }
		
		//INT
		public RuleCall getLlaveINTTerminalRuleCall_0_0() { return cLlaveINTTerminalRuleCall_0_0; }
		
		//IGUAL
		public RuleCall getIGUALTerminalRuleCall_1() { return cIGUALTerminalRuleCall_1; }
		
		//valor=CADENA_LITERAL
		public Assignment getValorAssignment_2() { return cValorAssignment_2; }
		
		//CADENA_LITERAL
		public RuleCall getValorCADENA_LITERALTerminalRuleCall_2_0() { return cValorCADENA_LITERALTerminalRuleCall_2_0; }
	}
	public class ServicioComputoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.ServicioComputo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServicioComputoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cLLAVEITerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cVariablesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVariablesVariableParserRuleCall_3_0 = (RuleCall)cVariablesAssignment_3.eContents().get(0);
		private final Assignment cCondicionesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCondicionesCondicionParserRuleCall_4_0 = (RuleCall)cCondicionesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRetornarKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExpresionRetornoAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cExpresionRetornoExpresionParserRuleCall_5_1_0 = (RuleCall)cExpresionRetornoAssignment_5_1.eContents().get(0);
		private final RuleCall cPTOCOMATerminalRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
		private final RuleCall cLLAVEDTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//ServicioComputo:
		//	'servicioComputo' name=ID
		//	LLAVEI
		//	variables+=Variable*
		//	condiciones+=Condicion* ('retornar' expresionRetorno=Expresion PTOCOMA)?
		//	LLAVED;
		@Override public ParserRule getRule() { return rule; }
		
		//'servicioComputo' name=ID LLAVEI variables+=Variable* condiciones+=Condicion* ('retornar' expresionRetorno=Expresion
		//PTOCOMA)? LLAVED
		public Group getGroup() { return cGroup; }
		
		//'servicioComputo'
		public Keyword getServicioComputoKeyword_0() { return cServicioComputoKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//LLAVEI
		public RuleCall getLLAVEITerminalRuleCall_2() { return cLLAVEITerminalRuleCall_2; }
		
		//variables+=Variable*
		public Assignment getVariablesAssignment_3() { return cVariablesAssignment_3; }
		
		//Variable
		public RuleCall getVariablesVariableParserRuleCall_3_0() { return cVariablesVariableParserRuleCall_3_0; }
		
		//condiciones+=Condicion*
		public Assignment getCondicionesAssignment_4() { return cCondicionesAssignment_4; }
		
		//Condicion
		public RuleCall getCondicionesCondicionParserRuleCall_4_0() { return cCondicionesCondicionParserRuleCall_4_0; }
		
		//('retornar' expresionRetorno=Expresion PTOCOMA)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'retornar'
		public Keyword getRetornarKeyword_5_0() { return cRetornarKeyword_5_0; }
		
		//expresionRetorno=Expresion
		public Assignment getExpresionRetornoAssignment_5_1() { return cExpresionRetornoAssignment_5_1; }
		
		//Expresion
		public RuleCall getExpresionRetornoExpresionParserRuleCall_5_1_0() { return cExpresionRetornoExpresionParserRuleCall_5_1_0; }
		
		//PTOCOMA
		public RuleCall getPTOCOMATerminalRuleCall_5_2() { return cPTOCOMATerminalRuleCall_5_2; }
		
		//LLAVED
		public RuleCall getLLAVEDTerminalRuleCall_6() { return cLLAVEDTerminalRuleCall_6; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cDOSPTOSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cTipoPrimitivoAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cTipoPrimitivoTipoDatoPrimitivoEnumRuleCall_3_0_0 = (RuleCall)cTipoPrimitivoAssignment_3_0.eContents().get(0);
		private final Assignment cReferenciaEntidadAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final CrossReference cReferenciaEntidadEntidadCrossReference_3_1_0 = (CrossReference)cReferenciaEntidadAssignment_3_1.eContents().get(0);
		private final RuleCall cReferenciaEntidadEntidadIDTerminalRuleCall_3_1_0_1 = (RuleCall)cReferenciaEntidadEntidadCrossReference_3_1_0.eContents().get(1);
		private final RuleCall cIGUALTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cExpresionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpresionExpresionParserRuleCall_5_0 = (RuleCall)cExpresionAssignment_5.eContents().get(0);
		private final RuleCall cPTOCOMATerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//Variable:
		//	'var' name=ID DOSPTOS (tipoPrimitivo=TipoDatoPrimitivo | referenciaEntidad=[Entidad]) IGUAL expresion=Expresion
		//	PTOCOMA;
		@Override public ParserRule getRule() { return rule; }
		
		//'var' name=ID DOSPTOS (tipoPrimitivo=TipoDatoPrimitivo | referenciaEntidad=[Entidad]) IGUAL expresion=Expresion PTOCOMA
		public Group getGroup() { return cGroup; }
		
		//'var'
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//DOSPTOS
		public RuleCall getDOSPTOSTerminalRuleCall_2() { return cDOSPTOSTerminalRuleCall_2; }
		
		//(tipoPrimitivo=TipoDatoPrimitivo | referenciaEntidad=[Entidad])
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//tipoPrimitivo=TipoDatoPrimitivo
		public Assignment getTipoPrimitivoAssignment_3_0() { return cTipoPrimitivoAssignment_3_0; }
		
		//TipoDatoPrimitivo
		public RuleCall getTipoPrimitivoTipoDatoPrimitivoEnumRuleCall_3_0_0() { return cTipoPrimitivoTipoDatoPrimitivoEnumRuleCall_3_0_0; }
		
		//referenciaEntidad=[Entidad]
		public Assignment getReferenciaEntidadAssignment_3_1() { return cReferenciaEntidadAssignment_3_1; }
		
		//[Entidad]
		public CrossReference getReferenciaEntidadEntidadCrossReference_3_1_0() { return cReferenciaEntidadEntidadCrossReference_3_1_0; }
		
		//ID
		public RuleCall getReferenciaEntidadEntidadIDTerminalRuleCall_3_1_0_1() { return cReferenciaEntidadEntidadIDTerminalRuleCall_3_1_0_1; }
		
		//IGUAL
		public RuleCall getIGUALTerminalRuleCall_4() { return cIGUALTerminalRuleCall_4; }
		
		//expresion=Expresion
		public Assignment getExpresionAssignment_5() { return cExpresionAssignment_5; }
		
		//Expresion
		public RuleCall getExpresionExpresionParserRuleCall_5_0() { return cExpresionExpresionParserRuleCall_5_0; }
		
		//PTOCOMA
		public RuleCall getPTOCOMATerminalRuleCall_6() { return cPTOCOMATerminalRuleCall_6; }
	}
	public class CondicionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.Condicion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Assignment cCondicionSiAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final Alternatives cCondicionSiAlternatives_0_0_0_0 = (Alternatives)cCondicionSiAssignment_0_0_0.eContents().get(0);
		private final Keyword cCondicionSiSiKeyword_0_0_0_0_0 = (Keyword)cCondicionSiAlternatives_0_0_0_0.eContents().get(0);
		private final Keyword cCondicionSiSiNoKeyword_0_0_0_0_1 = (Keyword)cCondicionSiAlternatives_0_0_0_0.eContents().get(1);
		private final Assignment cExpresionCondicionAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cExpresionCondicionExpresionParserRuleCall_0_0_1_0 = (RuleCall)cExpresionCondicionAssignment_0_0_1.eContents().get(0);
		private final Assignment cCondicionSiNingunoAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cCondicionSiNingunoSiNingunoKeyword_0_1_0 = (Keyword)cCondicionSiNingunoAssignment_0_1.eContents().get(0);
		private final RuleCall cLLAVEITerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cVariablesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVariablesVariableParserRuleCall_2_0 = (RuleCall)cVariablesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cAsignacionVariableAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cAsignacionVariableVariableCrossReference_3_0_0 = (CrossReference)cAsignacionVariableAssignment_3_0.eContents().get(0);
		private final RuleCall cAsignacionVariableVariableIDTerminalRuleCall_3_0_0_1 = (RuleCall)cAsignacionVariableVariableCrossReference_3_0_0.eContents().get(1);
		private final RuleCall cIGUALTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cExpresionAsignacionVariableAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cExpresionAsignacionVariableExpresionParserRuleCall_3_2_0 = (RuleCall)cExpresionAsignacionVariableAssignment_3_2.eContents().get(0);
		private final RuleCall cPTOCOMATerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Assignment cSubCondicionesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSubCondicionesCondicionParserRuleCall_4_0 = (RuleCall)cSubCondicionesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRetornarKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExpresionRetornoAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cExpresionRetornoExpresionParserRuleCall_5_1_0 = (RuleCall)cExpresionRetornoAssignment_5_1.eContents().get(0);
		private final RuleCall cPTOCOMATerminalRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
		private final RuleCall cLLAVEDTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//Condicion:
		//	(condicionSi=('si' | 'siNo') expresionCondicion=Expresion | condicionSiNinguno='siNinguno') LLAVEI
		//	variables+=Variable* (asignacionVariable=[Variable] IGUAL expresionAsignacionVariable=Expresion PTOCOMA)?
		//	subCondiciones+=Condicion* ('retornar' expresionRetorno=Expresion PTOCOMA)?
		//	LLAVED;
		@Override public ParserRule getRule() { return rule; }
		
		//(condicionSi=('si' | 'siNo') expresionCondicion=Expresion | condicionSiNinguno='siNinguno') LLAVEI variables+=Variable*
		//(asignacionVariable=[Variable] IGUAL expresionAsignacionVariable=Expresion PTOCOMA)? subCondiciones+=Condicion*
		//('retornar' expresionRetorno=Expresion PTOCOMA)? LLAVED
		public Group getGroup() { return cGroup; }
		
		//(condicionSi=('si' | 'siNo') expresionCondicion=Expresion | condicionSiNinguno='siNinguno')
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//condicionSi=('si' | 'siNo') expresionCondicion=Expresion
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//condicionSi=('si' | 'siNo')
		public Assignment getCondicionSiAssignment_0_0_0() { return cCondicionSiAssignment_0_0_0; }
		
		//('si' | 'siNo')
		public Alternatives getCondicionSiAlternatives_0_0_0_0() { return cCondicionSiAlternatives_0_0_0_0; }
		
		//'si'
		public Keyword getCondicionSiSiKeyword_0_0_0_0_0() { return cCondicionSiSiKeyword_0_0_0_0_0; }
		
		//'siNo'
		public Keyword getCondicionSiSiNoKeyword_0_0_0_0_1() { return cCondicionSiSiNoKeyword_0_0_0_0_1; }
		
		//expresionCondicion=Expresion
		public Assignment getExpresionCondicionAssignment_0_0_1() { return cExpresionCondicionAssignment_0_0_1; }
		
		//Expresion
		public RuleCall getExpresionCondicionExpresionParserRuleCall_0_0_1_0() { return cExpresionCondicionExpresionParserRuleCall_0_0_1_0; }
		
		//condicionSiNinguno='siNinguno'
		public Assignment getCondicionSiNingunoAssignment_0_1() { return cCondicionSiNingunoAssignment_0_1; }
		
		//'siNinguno'
		public Keyword getCondicionSiNingunoSiNingunoKeyword_0_1_0() { return cCondicionSiNingunoSiNingunoKeyword_0_1_0; }
		
		//LLAVEI
		public RuleCall getLLAVEITerminalRuleCall_1() { return cLLAVEITerminalRuleCall_1; }
		
		//variables+=Variable*
		public Assignment getVariablesAssignment_2() { return cVariablesAssignment_2; }
		
		//Variable
		public RuleCall getVariablesVariableParserRuleCall_2_0() { return cVariablesVariableParserRuleCall_2_0; }
		
		//(asignacionVariable=[Variable] IGUAL expresionAsignacionVariable=Expresion PTOCOMA)?
		public Group getGroup_3() { return cGroup_3; }
		
		//asignacionVariable=[Variable]
		public Assignment getAsignacionVariableAssignment_3_0() { return cAsignacionVariableAssignment_3_0; }
		
		//[Variable]
		public CrossReference getAsignacionVariableVariableCrossReference_3_0_0() { return cAsignacionVariableVariableCrossReference_3_0_0; }
		
		//ID
		public RuleCall getAsignacionVariableVariableIDTerminalRuleCall_3_0_0_1() { return cAsignacionVariableVariableIDTerminalRuleCall_3_0_0_1; }
		
		//IGUAL
		public RuleCall getIGUALTerminalRuleCall_3_1() { return cIGUALTerminalRuleCall_3_1; }
		
		//expresionAsignacionVariable=Expresion
		public Assignment getExpresionAsignacionVariableAssignment_3_2() { return cExpresionAsignacionVariableAssignment_3_2; }
		
		//Expresion
		public RuleCall getExpresionAsignacionVariableExpresionParserRuleCall_3_2_0() { return cExpresionAsignacionVariableExpresionParserRuleCall_3_2_0; }
		
		//PTOCOMA
		public RuleCall getPTOCOMATerminalRuleCall_3_3() { return cPTOCOMATerminalRuleCall_3_3; }
		
		//subCondiciones+=Condicion*
		public Assignment getSubCondicionesAssignment_4() { return cSubCondicionesAssignment_4; }
		
		//Condicion
		public RuleCall getSubCondicionesCondicionParserRuleCall_4_0() { return cSubCondicionesCondicionParserRuleCall_4_0; }
		
		//('retornar' expresionRetorno=Expresion PTOCOMA)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'retornar'
		public Keyword getRetornarKeyword_5_0() { return cRetornarKeyword_5_0; }
		
		//expresionRetorno=Expresion
		public Assignment getExpresionRetornoAssignment_5_1() { return cExpresionRetornoAssignment_5_1; }
		
		//Expresion
		public RuleCall getExpresionRetornoExpresionParserRuleCall_5_1_0() { return cExpresionRetornoExpresionParserRuleCall_5_1_0; }
		
		//PTOCOMA
		public RuleCall getPTOCOMATerminalRuleCall_5_2() { return cPTOCOMATerminalRuleCall_5_2; }
		
		//LLAVED
		public RuleCall getLLAVEDTerminalRuleCall_6() { return cLLAVEDTerminalRuleCall_6; }
	}
	public class ExpresionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.Expresion");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cExpresionTerminalAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cExpresionTerminalExpresionTerminalParserRuleCall_0_0 = (RuleCall)cExpresionTerminalAssignment_0.eContents().get(0);
		private final Assignment cOperacionAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOperacionOperacionParserRuleCall_1_0 = (RuleCall)cOperacionAssignment_1.eContents().get(0);
		
		//Expresion:
		//	expresionTerminal=ExpresionTerminal | operacion=Operacion;
		@Override public ParserRule getRule() { return rule; }
		
		//expresionTerminal=ExpresionTerminal | operacion=Operacion
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//expresionTerminal=ExpresionTerminal
		public Assignment getExpresionTerminalAssignment_0() { return cExpresionTerminalAssignment_0; }
		
		//ExpresionTerminal
		public RuleCall getExpresionTerminalExpresionTerminalParserRuleCall_0_0() { return cExpresionTerminalExpresionTerminalParserRuleCall_0_0; }
		
		//operacion=Operacion
		public Assignment getOperacionAssignment_1() { return cOperacionAssignment_1; }
		
		//Operacion
		public RuleCall getOperacionOperacionParserRuleCall_1_0() { return cOperacionOperacionParserRuleCall_1_0; }
	}
	public class OperacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.Operacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIzquierdaAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIzquierdaExpresionTerminalParserRuleCall_0_0 = (RuleCall)cIzquierdaAssignment_0.eContents().get(0);
		private final Assignment cOperadorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperadorOperadorEnumRuleCall_1_0 = (RuleCall)cOperadorAssignment_1.eContents().get(0);
		private final Assignment cDerechaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDerechaExpresionTerminalParserRuleCall_2_0 = (RuleCall)cDerechaAssignment_2.eContents().get(0);
		
		//Operacion:
		//	izquierda=ExpresionTerminal operador=Operador derecha=ExpresionTerminal;
		@Override public ParserRule getRule() { return rule; }
		
		//izquierda=ExpresionTerminal operador=Operador derecha=ExpresionTerminal
		public Group getGroup() { return cGroup; }
		
		//izquierda=ExpresionTerminal
		public Assignment getIzquierdaAssignment_0() { return cIzquierdaAssignment_0; }
		
		//ExpresionTerminal
		public RuleCall getIzquierdaExpresionTerminalParserRuleCall_0_0() { return cIzquierdaExpresionTerminalParserRuleCall_0_0; }
		
		//operador=Operador
		public Assignment getOperadorAssignment_1() { return cOperadorAssignment_1; }
		
		//Operador
		public RuleCall getOperadorOperadorEnumRuleCall_1_0() { return cOperadorOperadorEnumRuleCall_1_0; }
		
		//derecha=ExpresionTerminal
		public Assignment getDerechaAssignment_2() { return cDerechaAssignment_2; }
		
		//ExpresionTerminal
		public RuleCall getDerechaExpresionTerminalParserRuleCall_2_0() { return cDerechaExpresionTerminalParserRuleCall_2_0; }
	}
	public class ExpresionTerminalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.ExpresionTerminal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cEnteroAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cEnteroINTTerminalRuleCall_0_0 = (RuleCall)cEnteroAssignment_0.eContents().get(0);
		private final Assignment cRealAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cRealREALTerminalRuleCall_1_0 = (RuleCall)cRealAssignment_1.eContents().get(0);
		private final Assignment cNombreCalificadoAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cNombreCalificadoNombreCalificadoParserRuleCall_2_0 = (RuleCall)cNombreCalificadoAssignment_2.eContents().get(0);
		
		//ExpresionTerminal:
		//	entero=INT | real=REAL | nombreCalificado=NombreCalificado;
		@Override public ParserRule getRule() { return rule; }
		
		//entero=INT | real=REAL | nombreCalificado=NombreCalificado
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//entero=INT
		public Assignment getEnteroAssignment_0() { return cEnteroAssignment_0; }
		
		//INT
		public RuleCall getEnteroINTTerminalRuleCall_0_0() { return cEnteroINTTerminalRuleCall_0_0; }
		
		//real=REAL
		public Assignment getRealAssignment_1() { return cRealAssignment_1; }
		
		//REAL
		public RuleCall getRealREALTerminalRuleCall_1_0() { return cRealREALTerminalRuleCall_1_0; }
		
		//nombreCalificado=NombreCalificado
		public Assignment getNombreCalificadoAssignment_2() { return cNombreCalificadoAssignment_2; }
		
		//NombreCalificado
		public RuleCall getNombreCalificadoNombreCalificadoParserRuleCall_2_0() { return cNombreCalificadoNombreCalificadoParserRuleCall_2_0; }
	}
	public class NombreCalificadoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.NombreCalificado");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdesIDTerminalRuleCall_0_0 = (RuleCall)cIdesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cIdesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cIdesIDTerminalRuleCall_1_1_0 = (RuleCall)cIdesAssignment_1_1.eContents().get(0);
		
		//NombreCalificado:
		//	ides+=ID ('.' ides+=ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		////http://stackoverflow.com/questions/14539985/xtext-dsl-grammar-scoping-customization
		//ides+=ID ('.' ides+=ID)*
		public Group getGroup() { return cGroup; }
		
		////http://stackoverflow.com/questions/14539985/xtext-dsl-grammar-scoping-customization
		//ides+=ID
		public Assignment getIdesAssignment_0() { return cIdesAssignment_0; }
		
		//ID
		public RuleCall getIdesIDTerminalRuleCall_0_0() { return cIdesIDTerminalRuleCall_0_0; }
		
		//('.' ides+=ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ides+=ID
		public Assignment getIdesAssignment_1_1() { return cIdesAssignment_1_1; }
		
		//ID
		public RuleCall getIdesIDTerminalRuleCall_1_1_0() { return cIdesIDTerminalRuleCall_1_1_0; }
	}
	
	public class TipoDatoPrimitivoElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.TipoDatoPrimitivo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNO_ASIGNADOEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNO_ASIGNADONoAsignadoKeyword_0_0 = (Keyword)cNO_ASIGNADOEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCADENA_CARACTERESEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCADENA_CARACTERESCadenaCaracteresKeyword_1_0 = (Keyword)cCADENA_CARACTERESEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cENTEROEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cENTEROEnteroKeyword_2_0 = (Keyword)cENTEROEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDOBLEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDOBLEDobleKeyword_3_0 = (Keyword)cDOBLEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cFECHAEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cFECHAFechaKeyword_4_0 = (Keyword)cFECHAEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANOEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cBOOLEANOBooleanoKeyword_5_0 = (Keyword)cBOOLEANOEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum TipoDatoPrimitivo:
		//	NO_ASIGNADO='NoAsignado' | CADENA_CARACTERES='CadenaCaracteres' | ENTERO='Entero' | DOBLE='Doble' | FECHA='Fecha' |
		//	BOOLEANO='Booleano';
		public EnumRule getRule() { return rule; }
		
		//NO_ASIGNADO='NoAsignado' | CADENA_CARACTERES='CadenaCaracteres' | ENTERO='Entero' | DOBLE='Doble' | FECHA='Fecha' |
		//BOOLEANO='Booleano'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NO_ASIGNADO='NoAsignado'
		public EnumLiteralDeclaration getNO_ASIGNADOEnumLiteralDeclaration_0() { return cNO_ASIGNADOEnumLiteralDeclaration_0; }
		
		//'NoAsignado'
		public Keyword getNO_ASIGNADONoAsignadoKeyword_0_0() { return cNO_ASIGNADONoAsignadoKeyword_0_0; }
		
		//CADENA_CARACTERES='CadenaCaracteres'
		public EnumLiteralDeclaration getCADENA_CARACTERESEnumLiteralDeclaration_1() { return cCADENA_CARACTERESEnumLiteralDeclaration_1; }
		
		//'CadenaCaracteres'
		public Keyword getCADENA_CARACTERESCadenaCaracteresKeyword_1_0() { return cCADENA_CARACTERESCadenaCaracteresKeyword_1_0; }
		
		//ENTERO='Entero'
		public EnumLiteralDeclaration getENTEROEnumLiteralDeclaration_2() { return cENTEROEnumLiteralDeclaration_2; }
		
		//'Entero'
		public Keyword getENTEROEnteroKeyword_2_0() { return cENTEROEnteroKeyword_2_0; }
		
		//DOBLE='Doble'
		public EnumLiteralDeclaration getDOBLEEnumLiteralDeclaration_3() { return cDOBLEEnumLiteralDeclaration_3; }
		
		//'Doble'
		public Keyword getDOBLEDobleKeyword_3_0() { return cDOBLEDobleKeyword_3_0; }
		
		//FECHA='Fecha'
		public EnumLiteralDeclaration getFECHAEnumLiteralDeclaration_4() { return cFECHAEnumLiteralDeclaration_4; }
		
		//'Fecha'
		public Keyword getFECHAFechaKeyword_4_0() { return cFECHAFechaKeyword_4_0; }
		
		//BOOLEANO='Booleano'
		public EnumLiteralDeclaration getBOOLEANOEnumLiteralDeclaration_5() { return cBOOLEANOEnumLiteralDeclaration_5; }
		
		//'Booleano'
		public Keyword getBOOLEANOBooleanoKeyword_5_0() { return cBOOLEANOBooleanoKeyword_5_0; }
	}
	public class OperadorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.Operador");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSUMAEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSUMAPlusSignKeyword_0_0 = (Keyword)cSUMAEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRESTAEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRESTAHyphenMinusKeyword_1_0 = (Keyword)cRESTAEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMULTIPLICACIONEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMULTIPLICACIONAsteriskKeyword_2_0 = (Keyword)cMULTIPLICACIONEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDIVISIONEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDIVISIONSolidusKeyword_3_0 = (Keyword)cDIVISIONEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cIGUALEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cIGUALEqualsSignEqualsSignKeyword_4_0 = (Keyword)cIGUALEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDIFERENTEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDIFERENTEExclamationMarkEqualsSignKeyword_5_0 = (Keyword)cDIFERENTEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cMAYOREnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cMAYORGreaterThanSignKeyword_6_0 = (Keyword)cMAYOREnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cMAYOR_IGUALEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cMAYOR_IGUALGreaterThanSignEqualsSignKeyword_7_0 = (Keyword)cMAYOR_IGUALEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cMENOREnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cMENORLessThanSignKeyword_8_0 = (Keyword)cMENOREnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cMENOR_IGUALEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cMENOR_IGUALLessThanSignEqualsSignKeyword_9_0 = (Keyword)cMENOR_IGUALEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cYEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cYAmpersandAmpersandKeyword_10_0 = (Keyword)cYEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cOEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cOVerticalLineVerticalLineKeyword_11_0 = (Keyword)cOEnumLiteralDeclaration_11.eContents().get(0);
		
		//enum Operador:
		//	SUMA='+' | RESTA='-' | MULTIPLICACION='*' | DIVISION='/' |
		//	IGUAL='==' | DIFERENTE='!=' |
		//	MAYOR='>' | MAYOR_IGUAL='>=' | MENOR='<' | MENOR_IGUAL='<=' |
		//	Y='&&' | O='||';
		public EnumRule getRule() { return rule; }
		
		//SUMA='+' | RESTA='-' | MULTIPLICACION='*' | DIVISION='/' | IGUAL='==' | DIFERENTE='!=' | MAYOR='>' | MAYOR_IGUAL='>=' |
		//MENOR='<' | MENOR_IGUAL='<=' | Y='&&' | O='||'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SUMA='+'
		public EnumLiteralDeclaration getSUMAEnumLiteralDeclaration_0() { return cSUMAEnumLiteralDeclaration_0; }
		
		//'+'
		public Keyword getSUMAPlusSignKeyword_0_0() { return cSUMAPlusSignKeyword_0_0; }
		
		//RESTA='-'
		public EnumLiteralDeclaration getRESTAEnumLiteralDeclaration_1() { return cRESTAEnumLiteralDeclaration_1; }
		
		//'-'
		public Keyword getRESTAHyphenMinusKeyword_1_0() { return cRESTAHyphenMinusKeyword_1_0; }
		
		//MULTIPLICACION='*'
		public EnumLiteralDeclaration getMULTIPLICACIONEnumLiteralDeclaration_2() { return cMULTIPLICACIONEnumLiteralDeclaration_2; }
		
		//'*'
		public Keyword getMULTIPLICACIONAsteriskKeyword_2_0() { return cMULTIPLICACIONAsteriskKeyword_2_0; }
		
		//DIVISION='/'
		public EnumLiteralDeclaration getDIVISIONEnumLiteralDeclaration_3() { return cDIVISIONEnumLiteralDeclaration_3; }
		
		//'/'
		public Keyword getDIVISIONSolidusKeyword_3_0() { return cDIVISIONSolidusKeyword_3_0; }
		
		//IGUAL='=='
		public EnumLiteralDeclaration getIGUALEnumLiteralDeclaration_4() { return cIGUALEnumLiteralDeclaration_4; }
		
		//'=='
		public Keyword getIGUALEqualsSignEqualsSignKeyword_4_0() { return cIGUALEqualsSignEqualsSignKeyword_4_0; }
		
		//DIFERENTE='!='
		public EnumLiteralDeclaration getDIFERENTEEnumLiteralDeclaration_5() { return cDIFERENTEEnumLiteralDeclaration_5; }
		
		//'!='
		public Keyword getDIFERENTEExclamationMarkEqualsSignKeyword_5_0() { return cDIFERENTEExclamationMarkEqualsSignKeyword_5_0; }
		
		//MAYOR='>'
		public EnumLiteralDeclaration getMAYOREnumLiteralDeclaration_6() { return cMAYOREnumLiteralDeclaration_6; }
		
		//'>'
		public Keyword getMAYORGreaterThanSignKeyword_6_0() { return cMAYORGreaterThanSignKeyword_6_0; }
		
		//MAYOR_IGUAL='>='
		public EnumLiteralDeclaration getMAYOR_IGUALEnumLiteralDeclaration_7() { return cMAYOR_IGUALEnumLiteralDeclaration_7; }
		
		//'>='
		public Keyword getMAYOR_IGUALGreaterThanSignEqualsSignKeyword_7_0() { return cMAYOR_IGUALGreaterThanSignEqualsSignKeyword_7_0; }
		
		//MENOR='<'
		public EnumLiteralDeclaration getMENOREnumLiteralDeclaration_8() { return cMENOREnumLiteralDeclaration_8; }
		
		//'<'
		public Keyword getMENORLessThanSignKeyword_8_0() { return cMENORLessThanSignKeyword_8_0; }
		
		//MENOR_IGUAL='<='
		public EnumLiteralDeclaration getMENOR_IGUALEnumLiteralDeclaration_9() { return cMENOR_IGUALEnumLiteralDeclaration_9; }
		
		//'<='
		public Keyword getMENOR_IGUALLessThanSignEqualsSignKeyword_9_0() { return cMENOR_IGUALLessThanSignEqualsSignKeyword_9_0; }
		
		//Y='&&'
		public EnumLiteralDeclaration getYEnumLiteralDeclaration_10() { return cYEnumLiteralDeclaration_10; }
		
		//'&&'
		public Keyword getYAmpersandAmpersandKeyword_10_0() { return cYAmpersandAmpersandKeyword_10_0; }
		
		//O='||'
		public EnumLiteralDeclaration getOEnumLiteralDeclaration_11() { return cOEnumLiteralDeclaration_11; }
		
		//'||'
		public Keyword getOVerticalLineVerticalLineKeyword_11_0() { return cOVerticalLineVerticalLineKeyword_11_0; }
	}
	
	private final PagoServicioElements pPagoServicio;
	private final EntidadElements pEntidad;
	private final AtributoElements pAtributo;
	private final LlaveValorElements pLlaveValor;
	private final TipoDatoPrimitivoElements eTipoDatoPrimitivo;
	private final ServicioComputoElements pServicioComputo;
	private final VariableElements pVariable;
	private final CondicionElements pCondicion;
	private final ExpresionElements pExpresion;
	private final OperacionElements pOperacion;
	private final ExpresionTerminalElements pExpresionTerminal;
	private final OperadorElements eOperador;
	private final NombreCalificadoElements pNombreCalificado;
	private final TerminalRule tREAL;
	private final TerminalRule tCADENA_LITERAL;
	private final TerminalRule tIGUAL;
	private final TerminalRule tPARENTI;
	private final TerminalRule tPARENTD;
	private final TerminalRule tCOMA;
	private final TerminalRule tPTOCOMA;
	private final TerminalRule tDOSPTOS;
	private final TerminalRule tLLAVEI;
	private final TerminalRule tLLAVED;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PilaGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPagoServicio = new PagoServicioElements();
		this.pEntidad = new EntidadElements();
		this.pAtributo = new AtributoElements();
		this.pLlaveValor = new LlaveValorElements();
		this.eTipoDatoPrimitivo = new TipoDatoPrimitivoElements();
		this.pServicioComputo = new ServicioComputoElements();
		this.pVariable = new VariableElements();
		this.pCondicion = new CondicionElements();
		this.pExpresion = new ExpresionElements();
		this.pOperacion = new OperacionElements();
		this.pExpresionTerminal = new ExpresionTerminalElements();
		this.eOperador = new OperadorElements();
		this.pNombreCalificado = new NombreCalificadoElements();
		this.tREAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.REAL");
		this.tCADENA_LITERAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.CADENA_LITERAL");
		this.tIGUAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.IGUAL");
		this.tPARENTI = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.PARENTI");
		this.tPARENTD = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.PARENTD");
		this.tCOMA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.COMA");
		this.tPTOCOMA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.PTOCOMA");
		this.tDOSPTOS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.DOSPTOS");
		this.tLLAVEI = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.LLAVEI");
		this.tLLAVED = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.piladsl.Pila.LLAVED");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.piladsl.Pila".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//PagoServicio:
	//	entidades+=Entidad+
	//	serviciosComputo+=ServicioComputo*;
	public PagoServicioElements getPagoServicioAccess() {
		return pPagoServicio;
	}
	
	public ParserRule getPagoServicioRule() {
		return getPagoServicioAccess().getRule();
	}
	
	//Entidad:
	//	'entidad' name=ID LLAVEI atributos+=Atributo* LLAVED;
	public EntidadElements getEntidadAccess() {
		return pEntidad;
	}
	
	public ParserRule getEntidadRule() {
		return getEntidadAccess().getRule();
	}
	
	//Atributo:
	//	'atributo' name=ID DOSPTOS (tipoPrimitivo=TipoDatoPrimitivo (LLAVEI listaLlaveValor+=LlaveValor (COMA
	//	listaLlaveValor+=LlaveValor)* LLAVED)? | 'Lista' listaEntidad=[Entidad] | 'Referencia' referencia=ID) PTOCOMA;
	public AtributoElements getAtributoAccess() {
		return pAtributo;
	}
	
	public ParserRule getAtributoRule() {
		return getAtributoAccess().getRule();
	}
	
	//LlaveValor:
	//	llave=INT IGUAL valor=CADENA_LITERAL;
	public LlaveValorElements getLlaveValorAccess() {
		return pLlaveValor;
	}
	
	public ParserRule getLlaveValorRule() {
		return getLlaveValorAccess().getRule();
	}
	
	//enum TipoDatoPrimitivo:
	//	NO_ASIGNADO='NoAsignado' | CADENA_CARACTERES='CadenaCaracteres' | ENTERO='Entero' | DOBLE='Doble' | FECHA='Fecha' |
	//	BOOLEANO='Booleano';
	public TipoDatoPrimitivoElements getTipoDatoPrimitivoAccess() {
		return eTipoDatoPrimitivo;
	}
	
	public EnumRule getTipoDatoPrimitivoRule() {
		return getTipoDatoPrimitivoAccess().getRule();
	}
	
	//ServicioComputo:
	//	'servicioComputo' name=ID
	//	LLAVEI
	//	variables+=Variable*
	//	condiciones+=Condicion* ('retornar' expresionRetorno=Expresion PTOCOMA)?
	//	LLAVED;
	public ServicioComputoElements getServicioComputoAccess() {
		return pServicioComputo;
	}
	
	public ParserRule getServicioComputoRule() {
		return getServicioComputoAccess().getRule();
	}
	
	//Variable:
	//	'var' name=ID DOSPTOS (tipoPrimitivo=TipoDatoPrimitivo | referenciaEntidad=[Entidad]) IGUAL expresion=Expresion
	//	PTOCOMA;
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//Condicion:
	//	(condicionSi=('si' | 'siNo') expresionCondicion=Expresion | condicionSiNinguno='siNinguno') LLAVEI
	//	variables+=Variable* (asignacionVariable=[Variable] IGUAL expresionAsignacionVariable=Expresion PTOCOMA)?
	//	subCondiciones+=Condicion* ('retornar' expresionRetorno=Expresion PTOCOMA)?
	//	LLAVED;
	public CondicionElements getCondicionAccess() {
		return pCondicion;
	}
	
	public ParserRule getCondicionRule() {
		return getCondicionAccess().getRule();
	}
	
	//Expresion:
	//	expresionTerminal=ExpresionTerminal | operacion=Operacion;
	public ExpresionElements getExpresionAccess() {
		return pExpresion;
	}
	
	public ParserRule getExpresionRule() {
		return getExpresionAccess().getRule();
	}
	
	//Operacion:
	//	izquierda=ExpresionTerminal operador=Operador derecha=ExpresionTerminal;
	public OperacionElements getOperacionAccess() {
		return pOperacion;
	}
	
	public ParserRule getOperacionRule() {
		return getOperacionAccess().getRule();
	}
	
	//ExpresionTerminal:
	//	entero=INT | real=REAL | nombreCalificado=NombreCalificado;
	public ExpresionTerminalElements getExpresionTerminalAccess() {
		return pExpresionTerminal;
	}
	
	public ParserRule getExpresionTerminalRule() {
		return getExpresionTerminalAccess().getRule();
	}
	
	//enum Operador:
	//	SUMA='+' | RESTA='-' | MULTIPLICACION='*' | DIVISION='/' |
	//	IGUAL='==' | DIFERENTE='!=' |
	//	MAYOR='>' | MAYOR_IGUAL='>=' | MENOR='<' | MENOR_IGUAL='<=' |
	//	Y='&&' | O='||';
	public OperadorElements getOperadorAccess() {
		return eOperador;
	}
	
	public EnumRule getOperadorRule() {
		return getOperadorAccess().getRule();
	}
	
	//NombreCalificado:
	//	ides+=ID ('.' ides+=ID)*;
	public NombreCalificadoElements getNombreCalificadoAccess() {
		return pNombreCalificado;
	}
	
	public ParserRule getNombreCalificadoRule() {
		return getNombreCalificadoAccess().getRule();
	}
	
	//terminal REAL:
	//	INT '.' INT;
	public TerminalRule getREALRule() {
		return tREAL;
	}
	
	//terminal CADENA_LITERAL:
	//	'"' ('\\' . | !('\\' | '"' | '\b' | '\t' | '\n' | '\f' | '\r'))* '"';
	public TerminalRule getCADENA_LITERALRule() {
		return tCADENA_LITERAL;
	}
	
	//terminal IGUAL:
	//	'=';
	public TerminalRule getIGUALRule() {
		return tIGUAL;
	}
	
	//terminal PARENTI:
	//	'(';
	public TerminalRule getPARENTIRule() {
		return tPARENTI;
	}
	
	//terminal PARENTD:
	//	')';
	public TerminalRule getPARENTDRule() {
		return tPARENTD;
	}
	
	//terminal COMA:
	//	',';
	public TerminalRule getCOMARule() {
		return tCOMA;
	}
	
	//terminal PTOCOMA:
	//	';';
	public TerminalRule getPTOCOMARule() {
		return tPTOCOMA;
	}
	
	//terminal DOSPTOS:
	//	':';
	public TerminalRule getDOSPTOSRule() {
		return tDOSPTOS;
	}
	
	//terminal LLAVEI:
	//	'{';
	public TerminalRule getLLAVEIRule() {
		return tLLAVEI;
	}
	
	//terminal LLAVED:
	//	'}';
	public TerminalRule getLLAVEDRule() {
		return tLLAVED;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
