/*
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.piladsl.ide.contentassist.antlr;

import co.edu.uniandes.piladsl.ide.contentassist.antlr.internal.InternalPilaParser;
import co.edu.uniandes.piladsl.services.PilaGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class PilaParser extends AbstractContentAssistParser {

	@Inject
	private PilaGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalPilaParser createParser() {
		InternalPilaParser result = new InternalPilaParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAtributoAccess().getAlternatives_3(), "rule__Atributo__Alternatives_3");
					put(grammarAccess.getVariableAccess().getAlternatives_3(), "rule__Variable__Alternatives_3");
					put(grammarAccess.getCondicionAccess().getAlternatives_0(), "rule__Condicion__Alternatives_0");
					put(grammarAccess.getCondicionAccess().getCondicionSiAlternatives_0_0_0_0(), "rule__Condicion__CondicionSiAlternatives_0_0_0_0");
					put(grammarAccess.getExpresionAccess().getAlternatives(), "rule__Expresion__Alternatives");
					put(grammarAccess.getExpresionTerminalAccess().getAlternatives(), "rule__ExpresionTerminal__Alternatives");
					put(grammarAccess.getTipoDatoPrimitivoAccess().getAlternatives(), "rule__TipoDatoPrimitivo__Alternatives");
					put(grammarAccess.getOperadorAccess().getAlternatives(), "rule__Operador__Alternatives");
					put(grammarAccess.getPagoServicioAccess().getGroup(), "rule__PagoServicio__Group__0");
					put(grammarAccess.getEntidadAccess().getGroup(), "rule__Entidad__Group__0");
					put(grammarAccess.getAtributoAccess().getGroup(), "rule__Atributo__Group__0");
					put(grammarAccess.getAtributoAccess().getGroup_3_0(), "rule__Atributo__Group_3_0__0");
					put(grammarAccess.getAtributoAccess().getGroup_3_0_1(), "rule__Atributo__Group_3_0_1__0");
					put(grammarAccess.getAtributoAccess().getGroup_3_0_1_2(), "rule__Atributo__Group_3_0_1_2__0");
					put(grammarAccess.getAtributoAccess().getGroup_3_1(), "rule__Atributo__Group_3_1__0");
					put(grammarAccess.getAtributoAccess().getGroup_3_2(), "rule__Atributo__Group_3_2__0");
					put(grammarAccess.getLlaveValorAccess().getGroup(), "rule__LlaveValor__Group__0");
					put(grammarAccess.getServicioComputoAccess().getGroup(), "rule__ServicioComputo__Group__0");
					put(grammarAccess.getServicioComputoAccess().getGroup_5(), "rule__ServicioComputo__Group_5__0");
					put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
					put(grammarAccess.getCondicionAccess().getGroup(), "rule__Condicion__Group__0");
					put(grammarAccess.getCondicionAccess().getGroup_0_0(), "rule__Condicion__Group_0_0__0");
					put(grammarAccess.getCondicionAccess().getGroup_3(), "rule__Condicion__Group_3__0");
					put(grammarAccess.getCondicionAccess().getGroup_5(), "rule__Condicion__Group_5__0");
					put(grammarAccess.getOperacionAccess().getGroup(), "rule__Operacion__Group__0");
					put(grammarAccess.getNombreCalificadoAccess().getGroup(), "rule__NombreCalificado__Group__0");
					put(grammarAccess.getNombreCalificadoAccess().getGroup_1(), "rule__NombreCalificado__Group_1__0");
					put(grammarAccess.getPagoServicioAccess().getEntidadesAssignment_0(), "rule__PagoServicio__EntidadesAssignment_0");
					put(grammarAccess.getPagoServicioAccess().getServiciosComputoAssignment_1(), "rule__PagoServicio__ServiciosComputoAssignment_1");
					put(grammarAccess.getEntidadAccess().getNameAssignment_1(), "rule__Entidad__NameAssignment_1");
					put(grammarAccess.getEntidadAccess().getAtributosAssignment_3(), "rule__Entidad__AtributosAssignment_3");
					put(grammarAccess.getAtributoAccess().getNameAssignment_1(), "rule__Atributo__NameAssignment_1");
					put(grammarAccess.getAtributoAccess().getTipoPrimitivoAssignment_3_0_0(), "rule__Atributo__TipoPrimitivoAssignment_3_0_0");
					put(grammarAccess.getAtributoAccess().getListaLlaveValorAssignment_3_0_1_1(), "rule__Atributo__ListaLlaveValorAssignment_3_0_1_1");
					put(grammarAccess.getAtributoAccess().getListaLlaveValorAssignment_3_0_1_2_1(), "rule__Atributo__ListaLlaveValorAssignment_3_0_1_2_1");
					put(grammarAccess.getAtributoAccess().getListaEntidadAssignment_3_1_1(), "rule__Atributo__ListaEntidadAssignment_3_1_1");
					put(grammarAccess.getAtributoAccess().getReferenciaAssignment_3_2_1(), "rule__Atributo__ReferenciaAssignment_3_2_1");
					put(grammarAccess.getLlaveValorAccess().getLlaveAssignment_0(), "rule__LlaveValor__LlaveAssignment_0");
					put(grammarAccess.getLlaveValorAccess().getValorAssignment_2(), "rule__LlaveValor__ValorAssignment_2");
					put(grammarAccess.getServicioComputoAccess().getNameAssignment_1(), "rule__ServicioComputo__NameAssignment_1");
					put(grammarAccess.getServicioComputoAccess().getVariablesAssignment_3(), "rule__ServicioComputo__VariablesAssignment_3");
					put(grammarAccess.getServicioComputoAccess().getCondicionesAssignment_4(), "rule__ServicioComputo__CondicionesAssignment_4");
					put(grammarAccess.getServicioComputoAccess().getExpresionRetornoAssignment_5_1(), "rule__ServicioComputo__ExpresionRetornoAssignment_5_1");
					put(grammarAccess.getVariableAccess().getNameAssignment_1(), "rule__Variable__NameAssignment_1");
					put(grammarAccess.getVariableAccess().getTipoPrimitivoAssignment_3_0(), "rule__Variable__TipoPrimitivoAssignment_3_0");
					put(grammarAccess.getVariableAccess().getReferenciaEntidadAssignment_3_1(), "rule__Variable__ReferenciaEntidadAssignment_3_1");
					put(grammarAccess.getVariableAccess().getExpresionAssignment_5(), "rule__Variable__ExpresionAssignment_5");
					put(grammarAccess.getCondicionAccess().getCondicionSiAssignment_0_0_0(), "rule__Condicion__CondicionSiAssignment_0_0_0");
					put(grammarAccess.getCondicionAccess().getExpresionCondicionAssignment_0_0_1(), "rule__Condicion__ExpresionCondicionAssignment_0_0_1");
					put(grammarAccess.getCondicionAccess().getCondicionSiNingunoAssignment_0_1(), "rule__Condicion__CondicionSiNingunoAssignment_0_1");
					put(grammarAccess.getCondicionAccess().getVariablesAssignment_2(), "rule__Condicion__VariablesAssignment_2");
					put(grammarAccess.getCondicionAccess().getAsignacionVariableAssignment_3_0(), "rule__Condicion__AsignacionVariableAssignment_3_0");
					put(grammarAccess.getCondicionAccess().getExpresionAsignacionVariableAssignment_3_2(), "rule__Condicion__ExpresionAsignacionVariableAssignment_3_2");
					put(grammarAccess.getCondicionAccess().getSubCondicionesAssignment_4(), "rule__Condicion__SubCondicionesAssignment_4");
					put(grammarAccess.getCondicionAccess().getExpresionRetornoAssignment_5_1(), "rule__Condicion__ExpresionRetornoAssignment_5_1");
					put(grammarAccess.getExpresionAccess().getExpresionTerminalAssignment_0(), "rule__Expresion__ExpresionTerminalAssignment_0");
					put(grammarAccess.getExpresionAccess().getOperacionAssignment_1(), "rule__Expresion__OperacionAssignment_1");
					put(grammarAccess.getOperacionAccess().getIzquierdaAssignment_0(), "rule__Operacion__IzquierdaAssignment_0");
					put(grammarAccess.getOperacionAccess().getOperadorAssignment_1(), "rule__Operacion__OperadorAssignment_1");
					put(grammarAccess.getOperacionAccess().getDerechaAssignment_2(), "rule__Operacion__DerechaAssignment_2");
					put(grammarAccess.getExpresionTerminalAccess().getEnteroAssignment_0(), "rule__ExpresionTerminal__EnteroAssignment_0");
					put(grammarAccess.getExpresionTerminalAccess().getRealAssignment_1(), "rule__ExpresionTerminal__RealAssignment_1");
					put(grammarAccess.getExpresionTerminalAccess().getNombreCalificadoAssignment_2(), "rule__ExpresionTerminal__NombreCalificadoAssignment_2");
					put(grammarAccess.getNombreCalificadoAccess().getIdesAssignment_0(), "rule__NombreCalificado__IdesAssignment_0");
					put(grammarAccess.getNombreCalificadoAccess().getIdesAssignment_1_1(), "rule__NombreCalificado__IdesAssignment_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalPilaParser typedParser = (InternalPilaParser) parser;
			typedParser.entryRulePagoServicio();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PilaGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PilaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
