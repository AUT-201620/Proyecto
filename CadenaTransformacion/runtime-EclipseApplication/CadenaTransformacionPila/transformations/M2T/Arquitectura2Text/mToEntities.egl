package entities;

import javax.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.List;
import java.util.Date;

/**
 * @author am.osorio
 *
 */
@NamedQueries({
	@NamedQuery(name="[%=modelo.nombre.firstToUpperCase()%].get[%=modelo.nombre.firstToUpperCase()%]s",
    	query="SELECT e FROM [%=modelo.nombre.firstToUpperCase()%] e"),
    [%if (not modelo.esCrud){
    %]
	@NamedQuery(name="[%=modelo.nombre.firstToUpperCase()%].get[%=modelo.nombre.firstToUpperCase()%]Validaciones",
	   	query="SELECT p FROM [%=modelo.nombre.firstToUpperCase()%] p" +
	    [%for (atributo in modelo.atributos.select(m|m.modeloReferencia <> null)){
	    %]
	    	 " join p.[%=atributo.modeloReferencia.nombre.firstToLowerCase()%] [%=atributo.modeloReferencia.nombre.toLowerCase()%] " +
		[%}
		%]
		" WHERE "+
		[%for (atributo in modelo.atributos.select(m|m.modeloReferencia <> null)){
	    %]
	    	 " [%=atributo.modeloReferencia.nombre.toLowerCase()%].id = :id[%=atributo.modeloReferencia.nombre.firstToLowerCase()%] and"
		[%}
		%])
	[%}
  %]
})

@Entity
public class [%=modelo.nombre.firstToUpperCase()%] implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE)
	private Long id;
[%
	for (atributo in modelo.atributos) {
		if (atributo.tipo.name == 'REFERENCE') {
			if (atributo.tipoReferencia = mArq!TipoReferencia#MANY_TO_ONE) {
%]
	@ManyToOne
	private [%=atributo.modeloReferencia.nombre.firstToUpperCase()%] [%=atributo.nombre%];
[%
			}
			else if (atributo.tipoReferencia = mArq!TipoReferencia#ONE_TO_MANY) {
%]
	@OneToMany(cascade = {CascadeType.ALL}, mappedBy = "[%=modelo.nombre.firstToLowerCase()%]")
	private List<[%=atributo.modeloReferencia.nombre.firstToUpperCase()%]> [%=atributo.nombre%];
[%
			}
			else if (atributo.tipoReferencia = mArq!TipoReferencia#MANY_TO_MANY) {
%]
	@ManyToMany
	private List<[%=atributo.modeloReferencia.nombre.firstToUpperCase()%]> [%=atributo.nombre%];
[%
			}
		}
		else {
%]
	private [%=atributo.tipo.name.toLowerCase().firstToUpperCase()%] [%=atributo.nombre%];
[%
		}
	}
%]
[%
	//Determinar los modelos que apuntan a este modelo con referencias One To Many
	var modelosConRefOneToManyAEsteModelo = modelo.eContainer().modelos.select(
		m|m.nombre <> modelo.nombre and 
		  m.atributos.select(
		    a|a.tipo = mArq!TipoDato#REFERENCE and
		      a.tipoReferencia = mArq!TipoReferencia#ONE_TO_MANY and 
		      a.modeloReferencia.nombre = modelo.nombre
		  ).size() > 0
		);
	if (modelosConRefOneToManyAEsteModelo.size() > 0) {
%]
	//Referencia Bidireccional a Entidades que refieren a esta entidad como One To Many
[%		
		for (modeloRef in modelosConRefOneToManyAEsteModelo) {
%]
	@ManyToOne
	@JoinColumn(name="[%=modeloRef.nombre.firstToLowerCase()%]_id", nullable = false)
	private [%=modeloRef.nombre.firstToUpperCase()%] [%=modeloRef.nombre.firstToLowerCase()%];
[%
		}
	}
%]
[%
	//Determinar los modelos que apuntan a este modelo con referencias Many To Many
	var modelosConRefManyToManyAEsteModelo = modelo.eContainer().modelos.select(
		m|m.nombre <> modelo.nombre and 
		  m.atributos.select(
		    a|a.tipo = mArq!TipoDato#REFERENCE and
		      a.tipoReferencia = mArq!TipoReferencia#MANY_TO_MANY and 
		      a.modeloReferencia.nombre = modelo.nombre
		  ).size() > 0
		);
	if (modelosConRefManyToManyAEsteModelo.size() > 0) {
%]
	//Referencia Bidireccional a Entidades que refieren a esta entidad como Many To Many
[%		
		for (modeloRef in modelosConRefManyToManyAEsteModelo) {
%]
	@ManyToMany(mappedBy = "[%=modelo.nombre.firstToLowerCase()%]")
	private List<[%=modeloRef.nombre.firstToUpperCase()%]> [%=modeloRef.nombre.firstToLowerCase()%];
[%
		}
	}
%]

	/**
	 * @return the id
	 */
	public Long getId() {
		return id;
	}
	/**
	 * @param id the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}

[%
	for (atributo in modelo.atributos) {
		if (atributo.tipo.name == 'REFERENCE') {
			if (atributo.tipoReferencia = mArq!TipoReferencia#MANY_TO_ONE) {
%]
	/**
	 * @return the [%=atributo.nombre.firstToLowerCase()%]
	 */
	public [%=atributo.modeloReferencia.nombre.firstToUpperCase()%] get[%=atributo.nombre.firstToUpperCase()%]() {
		return [%=atributo.nombre.firstToLowerCase()%];
	}
	/**
	 * @param [%=atributo.nombre.firstToLowerCase()%] the [%=atributo.nombre.firstToLowerCase()%] to set
	 */
	public void set[%=atributo.modeloReferencia.nombre.firstToUpperCase()%]([%=atributo.modeloReferencia.nombre.firstToUpperCase()%] [%=atributo.nombre.firstToLowerCase()%]) {
		this.[%=atributo.nombre.firstToLowerCase()%] = [%=atributo.nombre.firstToLowerCase()%];
	}
	
[%
			}
			else {
%]
	/**
	 * @return the [%=atributo.nombre.firstToLowerCase()%]
	 */
	public List<[%=atributo.modeloReferencia.nombre.firstToUpperCase()%]> get[%=atributo.nombre.firstToUpperCase()%]() {
		return [%=atributo.nombre.firstToLowerCase()%];
	}
	/**
	 * @param [%=atributo.nombre.firstToLowerCase()%] the [%=atributo.nombre.firstToLowerCase()%] to set
	 */
	public void set[%=atributo.nombre.firstToUpperCase()%](List<[%=atributo.modeloReferencia.nombre.firstToUpperCase()%]> [%=atributo.nombre.firstToLowerCase()%]) {
		this.[%=atributo.nombre.firstToLowerCase()%] = [%=atributo.nombre.firstToLowerCase()%];
	}
	
[%
			}
		}
		else {
%]
	/**
	 * @return the [%=atributo.nombre.firstToLowerCase()%]
	 */
	public [%=atributo.tipo.name.toLowerCase().firstToUpperCase()%] get[%=atributo.nombre.firstToUpperCase()%]() {
		return [%=atributo.nombre.firstToLowerCase()%];
	}
	/**
	 * @param [%=atributo.nombre.firstToLowerCase()%] the [%=atributo.nombre.firstToLowerCase()%] to set
	 */
	public void set[%=atributo.nombre.firstToUpperCase()%]([%=atributo.tipo.name.toLowerCase().firstToUpperCase()%] [%=atributo.nombre.firstToLowerCase()%]) {
		this.[%=atributo.nombre.firstToLowerCase()%] = [%=atributo.nombre.firstToLowerCase()%];
	}

[%
		}
	}
%]
[%
	if (modelosConRefOneToManyAEsteModelo.size() > 0) {
		for (modeloRef in modelosConRefOneToManyAEsteModelo) {
%]
	/**
	 * @return the [%=modeloRef.nombre.firstToLowerCase()%]
	 */
	public [%=modeloRef.nombre.firstToUpperCase()%] get[%=modeloRef.nombre.firstToUpperCase()%]() {
		return [%=modeloRef.nombre.firstToLowerCase()%];
	}
	/**
	 * @param [%=modeloRef.nombre.firstToLowerCase()%] the [%=modeloRef.nombre.firstToLowerCase()%] to set
	 */
	public void set[%=modeloRef.nombre.firstToUpperCase()%]([%=modeloRef.nombre.firstToUpperCase()%] [%=modeloRef.nombre.firstToLowerCase()%]) {
		this.[%=modeloRef.nombre.firstToLowerCase()%] = [%=modeloRef.nombre.firstToLowerCase()%];
	}

[%
		}
	}
%]
[%
	if (modelosConRefManyToManyAEsteModelo.size() > 0) {
		for (modeloRef in modelosConRefManyToManyAEsteModelo) {
%]
	/**
	 * @return the [%=modeloRef.nombre.firstToLowerCase()%]
	 */
	public List<[%=modeloRef.nombre.firstToUpperCase()%]> get[%=modeloRef.nombre.firstToUpperCase()%]() {
		return [%=modeloRef.nombre.firstToLowerCase()%];
	}
	/**
	 * @param [%=modeloRef.nombre.firstToLowerCase()%] the [%=modeloRef.nombre.firstToLowerCase()%] to set
	 */
	public void set[%=modeloRef.nombre.firstToUpperCase()%](List<[%=modeloRef.nombre.firstToUpperCase()%]> [%=modeloRef.nombre.firstToLowerCase()%]) {
		this.[%=modeloRef.nombre.firstToLowerCase()%] = [%=modeloRef.nombre.firstToLowerCase()%];
	}

[%
		}
	}
%]
	@Override
	public String toString() {
		return "[%=modelo.nombre.firstToUpperCase()%]{" +
				"id=" + id +
				[%for (atributo in modelo.atributos) {
				%]
				", [%=atributo.nombre.firstToLowerCase()%]='" + [%=atributo.nombre.firstToLowerCase()%] + '\'' +
				[% } %]
				'}';
	}
}
