package web.beans;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.event.ValueChangeEvent;

import entities.*;
import services.*;

/**
 * Backing Bean para la pantalla [%=vista.nombre.firstToUpperCase()%]
 *
 */

@ManagedBean
@ViewScoped
public class [%=vista.nombre.firstToUpperCase()%]Bean implements Serializable {

	private static final long serialVersionUID = 1L;

	private List<[%=vista.nombre.firstToUpperCase()%]> [%=vista.nombre.firstToLowerCase()%]List = new ArrayList<[%=vista.nombre.firstToUpperCase()%]>();
	private I[%=vista.nombre.firstToUpperCase()%]Services services;
	[%
		if(vista.atributos.select(a|a.tipo == mArq!TipoAtributoVista#LISTA).size()>0){
	%]
		private IValidacionesServices validacionesServices;
	[%
		}
	%]
	private [%=vista.nombre.firstToUpperCase()%] [%=vista.nombre.firstToLowerCase()%];
	private Long identificador;
	private Boolean buttonCrud;
	[%
	vista.obtenerTipoAtributosEnum();
	vista.obtenerTipoAtributosLista();
	%]

	/**
	 * Constructor de [%=vista.nombre.firstToUpperCase()%]Bean
	 */
	public [%=vista.nombre.firstToUpperCase()%]Bean() {
		services = new [%=vista.nombre.firstToUpperCase()%]Services();
		[%=vista.nombre.firstToLowerCase()%] = new [%=vista.nombre.firstToUpperCase()%]();
		buttonCrud = Boolean.TRUE;
		[%
		if(vista.atributos.select(a|a.tipo == mArq!TipoAtributoVista#LISTA).size()>0){
		%]
			validacionesServices = new ValidacionesServices();
		[%
			}
			for(atributo in vista.atributos.select(a|a.tipo == mArq!TipoAtributoVista#LISTA)){
		%]
			[%=vista.nombre.firstToLowerCase()%].set[%=atributo.nombre.firstToUpperCase()%](new [%=atributo.nombre.firstToUpperCase()%]());
		[%
		}
		%]
	}
	
	
	/**
	 * 
	 */
	@PostConstruct
	public void init() {
		this.[%=vista.nombre.firstToLowerCase()%]List = services.getAll();
	}

	public void crear() {
		services.create(this.[%=vista.nombre.firstToLowerCase()%]);
		this.[%=vista.nombre.firstToLowerCase()%]List = services.getAll();
	}

	public void delete() {
		services.delete(this.identificador);
		this.[%=vista.nombre.firstToLowerCase()%]List = services.getAll();
	}

	public void ver() {
		this.[%=vista.nombre.firstToLowerCase()%] = services.find(this.identificador);
		buttonCrud = Boolean.FALSE;
	}
	
	public void editar() {
		this.[%=vista.nombre.firstToLowerCase()%] = services.update(this.[%=vista.nombre.firstToLowerCase()%]);
		this.[%=vista.nombre.firstToLowerCase()%]List = services.getAll();
	}

	public void clear[%=vista.nombre.firstToUpperCase()%]() {
		this.[%=vista.nombre.firstToLowerCase()%] = new [%=vista.nombre.firstToUpperCase()%]();
		buttonCrud = Boolean.TRUE;
	[%
		for(atributo in vista.atributos.select(a|a.tipo == mArq!TipoAtributoVista#LISTA)){
	%]
		[%=vista.nombre.firstToLowerCase()%].set[%=atributo.nombre.firstToUpperCase()%](new [%=atributo.nombre.firstToUpperCase()%]());
	[%
	}
		if(vista.atributos.select(a|a.tipo == mArq!TipoAtributoVista#LISTA).size()>0){
	%]
		this.tipoPensionado = null;
		this.tipoPagadorPension = null;
	[%
		}
	%]
	}
	[%
		vista.getValidaciones();
	%]
	
	/**
	 * @return the [%=vista.nombre.firstToLowerCase()%]List
	 */
	public List<[%=vista.nombre.firstToUpperCase()%]> get[%=vista.nombre.firstToUpperCase()%]List() {
		return [%=vista.nombre.firstToLowerCase()%]List;
	}

	/**
	 * @param [%=vista.nombre.firstToLowerCase()%]List
	 * the [%=vista.nombre.firstToLowerCase()%]List to set
	 */
	public void set[%=vista.nombre.firstToUpperCase()%]List(List<[%=vista.nombre.firstToUpperCase()%]> [%=vista.nombre.firstToLowerCase()%]List) {
		this.[%=vista.nombre.firstToLowerCase()%]List = [%=vista.nombre.firstToLowerCase()%]List;
	}

	/**
	 * @return the [%=vista.nombre.firstToLowerCase()%]
	 */
	public [%=vista.nombre.firstToUpperCase()%] get[%=vista.nombre.firstToUpperCase()%]() {
		if ([%=vista.nombre.firstToLowerCase()%] == null) {
			[%=vista.nombre.firstToLowerCase()%] = new [%=vista.nombre.firstToUpperCase()%]();
		}
		return [%=vista.nombre.firstToLowerCase()%];
	}

	/**
	 * @param [%=vista.nombre.firstToLowerCase()%]
	 * the [%=vista.nombre.firstToLowerCase()%] to set
	 */
	public void set[%=vista.nombre.firstToUpperCase()%]([%=vista.nombre.firstToUpperCase()%] [%=vista.nombre.firstToLowerCase()%]) {
		this.[%=vista.nombre.firstToLowerCase()%] = [%=vista.nombre.firstToLowerCase()%];
	}

	/**
	 * @return the identificador
	 */
	public Long getIdentificador() {
		return identificador;
	}

	/**
	 * @param identificador
	 * the identificador to set
	 */
	public void setIdentificador(Long identificador) {
		this.identificador = identificador;
	}

	/**
	 * @return the buttonCrud
	 */
	public Boolean getButtonCrud() {
		return buttonCrud;
	}

	/**
	 * @param buttonCrud the buttonCrud to set
	 */
	public void setButtonCrud(Boolean buttonCrud) {
		this.buttonCrud = buttonCrud;
	}
[%
	vista.obtenerTipoAtributosEnumGetSet();
	vista.obtenerTipoAtributosListaGetSet();
%]
}

[%
	operation mArq!Vista obtenerTipoAtributosEnum() {
		for (atributo in self.atributos.select(a|a.tipo == mArq!TipoAtributoVista#ENUM)) {
			out.print('private '+atributo.nombre.firstToUpperCase()+'Enum [] '+atributo.nombre.firstToLowerCase()+'Enum;\n');
		}
	}
	
	operation mArq!Vista obtenerTipoAtributosEnumGetSet() {
		for (atributo in self.atributos.select(a|a.tipo == mArq!TipoAtributoVista#ENUM)) {
			out.print('/**\n');
			out.print(' * @return the' +atributo.nombre.firstToLowerCase()+'\n');
			out.print(' */ \n');
			out.print('public '+atributo.nombre.firstToUpperCase()+'Enum[] get'+atributo.nombre.firstToUpperCase()+'Enum() {\n');
				out.print('return '+atributo.nombre.firstToUpperCase()+'Enum.values();\n');
			out.print('}\n');
		
			out.print('/**\n');
			out.print(' * @param '+atributo.nombre.firstToLowerCase()+' the '+atributo.nombre.firstToLowerCase()+' to set\n');
			out.print(' */\n');
			out.print('public void set'+atributo.nombre.firstToUpperCase()+'Enum('+atributo.nombre.firstToUpperCase()+'Enum[] '+atributo.nombre.firstToLowerCase()+'Enum) {\n');
			out.print('this.'+atributo.nombre.firstToLowerCase()+'Enum = '+atributo.nombre.firstToLowerCase()+'Enum;\n');
			out.print('}\n');
		}
	}
	
	operation mArq!Vista obtenerTipoAtributosLista() {
		for (atributo in self.atributos.select(a|a.tipo == mArq!TipoAtributoVista#LISTA)) {
			out.print('private List<'+atributo.nombre.firstToUpperCase()+'> ' +atributo.nombre.firstToLowerCase()+';\n');
		}
	}
	
	operation mArq!Vista obtenerTipoAtributosListaGetSet() {	
		for (atributo in self.atributos.select(a|a.tipo == mArq!TipoAtributoVista#LISTA)) {
			out.print('/**\n');
			out.print(' * @return the' +atributo.nombre.firstToLowerCase()+'\n');
			out.print(' */ \n');
			out.print('public List<'+atributo.nombre.firstToUpperCase()+'> get'+atributo.nombre.firstToUpperCase()+'() {\n');
				out.print('return '+atributo.nombre.firstToLowerCase()+';\n');
			out.print('}\n');
		
			out.print('/**\n');
			out.print(' * @param '+atributo.nombre.firstToLowerCase()+' the '+atributo.nombre.firstToLowerCase()+' to set\n');
			out.print(' */\n');
			out.print('public void set'+atributo.nombre.firstToUpperCase()+'(List<'+atributo.nombre.firstToUpperCase()+'> '+atributo.nombre.firstToLowerCase()+') {\n');
			out.print('this.'+atributo.nombre.firstToLowerCase()+' = '+atributo.nombre.firstToLowerCase()+';\n');
			out.print('}\n');
		}
	}
	
	operation mArq!Vista getValidaciones() {
		if(self.atributos.select(a|a.tipo == mArq!TipoAtributoVista#LISTA).size()>0){
			out.print('public void getListTipos() {\n');
				
			out.print('if('+self.nombre.firstToLowerCase()+'.getTipoPension() != null && '+self.nombre.firstToLowerCase()+'.getTipoPension().getId()>0){\n');
			out.print('this.setTipoPensionado(validacionesServices.getTipoPensionado('+self.nombre.firstToLowerCase()+'.getTipoPension().getId()));\n');
			out.print('} else{\n');
			out.print('this.setTipoPensionado(new ArrayList<TipoPensionado>());\n');
			out.print('}');
		    out.print('if('+self.nombre.firstToLowerCase()+'.getTipoPension() != null && '+self.nombre.firstToLowerCase()+'.getTipoPension().getId()>0 && '+self.nombre.firstToLowerCase()+'.getTipoPensionado().getId() != null && '+self.nombre.firstToLowerCase()+'.getTipoPensionado().getId() >0){\n');
			out.print('this.setTipoPagadorPension(validacionesServices.getTipoPagadorPension('+self.nombre.firstToLowerCase()+'.getTipoPension().getId(),'+self.nombre.firstToLowerCase()+'.getTipoPensionado().getId()));\n');
			out.print('}\n');
		    out.print('else{\n');
			out.print('his.setTipoPagadorPension(new ArrayList<TipoPagadorPension>());\n');
			out.print('}\n');
			out.print('}\n');
		}
	}
%]
