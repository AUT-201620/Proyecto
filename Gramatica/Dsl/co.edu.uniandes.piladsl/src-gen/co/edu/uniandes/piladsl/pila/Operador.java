/**
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.piladsl.pila;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Operador</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see co.edu.uniandes.piladsl.pila.PilaPackage#getOperador()
 * @model
 * @generated
 */
public enum Operador implements Enumerator
{
  /**
   * The '<em><b>SUMA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SUMA_VALUE
   * @generated
   * @ordered
   */
  SUMA(0, "SUMA", "+"),

  /**
   * The '<em><b>RESTA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RESTA_VALUE
   * @generated
   * @ordered
   */
  RESTA(1, "RESTA", "-"),

  /**
   * The '<em><b>MULTIPLICACION</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MULTIPLICACION_VALUE
   * @generated
   * @ordered
   */
  MULTIPLICACION(2, "MULTIPLICACION", "*"),

  /**
   * The '<em><b>DIVISION</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DIVISION_VALUE
   * @generated
   * @ordered
   */
  DIVISION(3, "DIVISION", "/"),

  /**
   * The '<em><b>IGUAL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IGUAL_VALUE
   * @generated
   * @ordered
   */
  IGUAL(4, "IGUAL", "=="),

  /**
   * The '<em><b>DIFERENTE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DIFERENTE_VALUE
   * @generated
   * @ordered
   */
  DIFERENTE(5, "DIFERENTE", "!="),

  /**
   * The '<em><b>MAYOR</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MAYOR_VALUE
   * @generated
   * @ordered
   */
  MAYOR(6, "MAYOR", ">"),

  /**
   * The '<em><b>MAYOR IGUAL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MAYOR_IGUAL_VALUE
   * @generated
   * @ordered
   */
  MAYOR_IGUAL(7, "MAYOR_IGUAL", ">="),

  /**
   * The '<em><b>MENOR</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MENOR_VALUE
   * @generated
   * @ordered
   */
  MENOR(8, "MENOR", "<"),

  /**
   * The '<em><b>MENOR IGUAL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MENOR_IGUAL_VALUE
   * @generated
   * @ordered
   */
  MENOR_IGUAL(9, "MENOR_IGUAL", "<="),

  /**
   * The '<em><b>Y</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #Y_VALUE
   * @generated
   * @ordered
   */
  Y(10, "Y", "&&"),

  /**
   * The '<em><b>O</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #O_VALUE
   * @generated
   * @ordered
   */
  O(11, "O", "||");

  /**
   * The '<em><b>SUMA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>SUMA</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SUMA
   * @model literal="+"
   * @generated
   * @ordered
   */
  public static final int SUMA_VALUE = 0;

  /**
   * The '<em><b>RESTA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>RESTA</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RESTA
   * @model literal="-"
   * @generated
   * @ordered
   */
  public static final int RESTA_VALUE = 1;

  /**
   * The '<em><b>MULTIPLICACION</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MULTIPLICACION</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MULTIPLICACION
   * @model literal="*"
   * @generated
   * @ordered
   */
  public static final int MULTIPLICACION_VALUE = 2;

  /**
   * The '<em><b>DIVISION</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>DIVISION</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #DIVISION
   * @model literal="/"
   * @generated
   * @ordered
   */
  public static final int DIVISION_VALUE = 3;

  /**
   * The '<em><b>IGUAL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>IGUAL</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #IGUAL
   * @model literal="=="
   * @generated
   * @ordered
   */
  public static final int IGUAL_VALUE = 4;

  /**
   * The '<em><b>DIFERENTE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>DIFERENTE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #DIFERENTE
   * @model literal="!="
   * @generated
   * @ordered
   */
  public static final int DIFERENTE_VALUE = 5;

  /**
   * The '<em><b>MAYOR</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MAYOR</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MAYOR
   * @model literal=">"
   * @generated
   * @ordered
   */
  public static final int MAYOR_VALUE = 6;

  /**
   * The '<em><b>MAYOR IGUAL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MAYOR IGUAL</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MAYOR_IGUAL
   * @model literal=">="
   * @generated
   * @ordered
   */
  public static final int MAYOR_IGUAL_VALUE = 7;

  /**
   * The '<em><b>MENOR</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MENOR</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MENOR
   * @model literal="<"
   * @generated
   * @ordered
   */
  public static final int MENOR_VALUE = 8;

  /**
   * The '<em><b>MENOR IGUAL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MENOR IGUAL</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MENOR_IGUAL
   * @model literal="<="
   * @generated
   * @ordered
   */
  public static final int MENOR_IGUAL_VALUE = 9;

  /**
   * The '<em><b>Y</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Y</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #Y
   * @model literal="&&"
   * @generated
   * @ordered
   */
  public static final int Y_VALUE = 10;

  /**
   * The '<em><b>O</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>O</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #O
   * @model literal="||"
   * @generated
   * @ordered
   */
  public static final int O_VALUE = 11;

  /**
   * An array of all the '<em><b>Operador</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Operador[] VALUES_ARRAY =
    new Operador[]
    {
      SUMA,
      RESTA,
      MULTIPLICACION,
      DIVISION,
      IGUAL,
      DIFERENTE,
      MAYOR,
      MAYOR_IGUAL,
      MENOR,
      MENOR_IGUAL,
      Y,
      O,
    };

  /**
   * A public read-only list of all the '<em><b>Operador</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Operador> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Operador</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static Operador get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Operador result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Operador</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static Operador getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Operador result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Operador</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static Operador get(int value)
  {
    switch (value)
    {
      case SUMA_VALUE: return SUMA;
      case RESTA_VALUE: return RESTA;
      case MULTIPLICACION_VALUE: return MULTIPLICACION;
      case DIVISION_VALUE: return DIVISION;
      case IGUAL_VALUE: return IGUAL;
      case DIFERENTE_VALUE: return DIFERENTE;
      case MAYOR_VALUE: return MAYOR;
      case MAYOR_IGUAL_VALUE: return MAYOR_IGUAL;
      case MENOR_VALUE: return MENOR;
      case MENOR_IGUAL_VALUE: return MENOR_IGUAL;
      case Y_VALUE: return Y;
      case O_VALUE: return O;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Operador(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Operador
