/**
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.piladsl.pila.impl;

import co.edu.uniandes.piladsl.pila.Expresion;
import co.edu.uniandes.piladsl.pila.NombreCalificado;
import co.edu.uniandes.piladsl.pila.Operador;
import co.edu.uniandes.piladsl.pila.PilaPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expresion</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link co.edu.uniandes.piladsl.pila.impl.ExpresionImpl#getIzquierda <em>Izquierda</em>}</li>
 *   <li>{@link co.edu.uniandes.piladsl.pila.impl.ExpresionImpl#getOperador <em>Operador</em>}</li>
 *   <li>{@link co.edu.uniandes.piladsl.pila.impl.ExpresionImpl#getDerechas <em>Derechas</em>}</li>
 *   <li>{@link co.edu.uniandes.piladsl.pila.impl.ExpresionImpl#getEntero <em>Entero</em>}</li>
 *   <li>{@link co.edu.uniandes.piladsl.pila.impl.ExpresionImpl#getReal <em>Real</em>}</li>
 *   <li>{@link co.edu.uniandes.piladsl.pila.impl.ExpresionImpl#getNombreCalificado <em>Nombre Calificado</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ExpresionImpl extends MinimalEObjectImpl.Container implements Expresion
{
  /**
   * The cached value of the '{@link #getIzquierda() <em>Izquierda</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIzquierda()
   * @generated
   * @ordered
   */
  protected Expresion izquierda;

  /**
   * The cached value of the '{@link #getOperador() <em>Operador</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperador()
   * @generated
   * @ordered
   */
  protected EList<Operador> operador;

  /**
   * The cached value of the '{@link #getDerechas() <em>Derechas</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDerechas()
   * @generated
   * @ordered
   */
  protected EList<Expresion> derechas;

  /**
   * The default value of the '{@link #getEntero() <em>Entero</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntero()
   * @generated
   * @ordered
   */
  protected static final int ENTERO_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getEntero() <em>Entero</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntero()
   * @generated
   * @ordered
   */
  protected int entero = ENTERO_EDEFAULT;

  /**
   * The default value of the '{@link #getReal() <em>Real</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReal()
   * @generated
   * @ordered
   */
  protected static final int REAL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReal() <em>Real</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReal()
   * @generated
   * @ordered
   */
  protected int real = REAL_EDEFAULT;

  /**
   * The cached value of the '{@link #getNombreCalificado() <em>Nombre Calificado</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNombreCalificado()
   * @generated
   * @ordered
   */
  protected NombreCalificado nombreCalificado;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExpresionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PilaPackage.Literals.EXPRESION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expresion getIzquierda()
  {
    return izquierda;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIzquierda(Expresion newIzquierda, NotificationChain msgs)
  {
    Expresion oldIzquierda = izquierda;
    izquierda = newIzquierda;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__IZQUIERDA, oldIzquierda, newIzquierda);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIzquierda(Expresion newIzquierda)
  {
    if (newIzquierda != izquierda)
    {
      NotificationChain msgs = null;
      if (izquierda != null)
        msgs = ((InternalEObject)izquierda).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PilaPackage.EXPRESION__IZQUIERDA, null, msgs);
      if (newIzquierda != null)
        msgs = ((InternalEObject)newIzquierda).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PilaPackage.EXPRESION__IZQUIERDA, null, msgs);
      msgs = basicSetIzquierda(newIzquierda, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__IZQUIERDA, newIzquierda, newIzquierda));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Operador> getOperador()
  {
    if (operador == null)
    {
      operador = new EDataTypeEList<Operador>(Operador.class, this, PilaPackage.EXPRESION__OPERADOR);
    }
    return operador;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Expresion> getDerechas()
  {
    if (derechas == null)
    {
      derechas = new EObjectContainmentEList<Expresion>(Expresion.class, this, PilaPackage.EXPRESION__DERECHAS);
    }
    return derechas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getEntero()
  {
    return entero;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEntero(int newEntero)
  {
    int oldEntero = entero;
    entero = newEntero;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__ENTERO, oldEntero, entero));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getReal()
  {
    return real;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReal(int newReal)
  {
    int oldReal = real;
    real = newReal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__REAL, oldReal, real));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NombreCalificado getNombreCalificado()
  {
    return nombreCalificado;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNombreCalificado(NombreCalificado newNombreCalificado, NotificationChain msgs)
  {
    NombreCalificado oldNombreCalificado = nombreCalificado;
    nombreCalificado = newNombreCalificado;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__NOMBRE_CALIFICADO, oldNombreCalificado, newNombreCalificado);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNombreCalificado(NombreCalificado newNombreCalificado)
  {
    if (newNombreCalificado != nombreCalificado)
    {
      NotificationChain msgs = null;
      if (nombreCalificado != null)
        msgs = ((InternalEObject)nombreCalificado).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PilaPackage.EXPRESION__NOMBRE_CALIFICADO, null, msgs);
      if (newNombreCalificado != null)
        msgs = ((InternalEObject)newNombreCalificado).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PilaPackage.EXPRESION__NOMBRE_CALIFICADO, null, msgs);
      msgs = basicSetNombreCalificado(newNombreCalificado, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PilaPackage.EXPRESION__NOMBRE_CALIFICADO, newNombreCalificado, newNombreCalificado));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__IZQUIERDA:
        return basicSetIzquierda(null, msgs);
      case PilaPackage.EXPRESION__DERECHAS:
        return ((InternalEList<?>)getDerechas()).basicRemove(otherEnd, msgs);
      case PilaPackage.EXPRESION__NOMBRE_CALIFICADO:
        return basicSetNombreCalificado(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__IZQUIERDA:
        return getIzquierda();
      case PilaPackage.EXPRESION__OPERADOR:
        return getOperador();
      case PilaPackage.EXPRESION__DERECHAS:
        return getDerechas();
      case PilaPackage.EXPRESION__ENTERO:
        return getEntero();
      case PilaPackage.EXPRESION__REAL:
        return getReal();
      case PilaPackage.EXPRESION__NOMBRE_CALIFICADO:
        return getNombreCalificado();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__IZQUIERDA:
        setIzquierda((Expresion)newValue);
        return;
      case PilaPackage.EXPRESION__OPERADOR:
        getOperador().clear();
        getOperador().addAll((Collection<? extends Operador>)newValue);
        return;
      case PilaPackage.EXPRESION__DERECHAS:
        getDerechas().clear();
        getDerechas().addAll((Collection<? extends Expresion>)newValue);
        return;
      case PilaPackage.EXPRESION__ENTERO:
        setEntero((Integer)newValue);
        return;
      case PilaPackage.EXPRESION__REAL:
        setReal((Integer)newValue);
        return;
      case PilaPackage.EXPRESION__NOMBRE_CALIFICADO:
        setNombreCalificado((NombreCalificado)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__IZQUIERDA:
        setIzquierda((Expresion)null);
        return;
      case PilaPackage.EXPRESION__OPERADOR:
        getOperador().clear();
        return;
      case PilaPackage.EXPRESION__DERECHAS:
        getDerechas().clear();
        return;
      case PilaPackage.EXPRESION__ENTERO:
        setEntero(ENTERO_EDEFAULT);
        return;
      case PilaPackage.EXPRESION__REAL:
        setReal(REAL_EDEFAULT);
        return;
      case PilaPackage.EXPRESION__NOMBRE_CALIFICADO:
        setNombreCalificado((NombreCalificado)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PilaPackage.EXPRESION__IZQUIERDA:
        return izquierda != null;
      case PilaPackage.EXPRESION__OPERADOR:
        return operador != null && !operador.isEmpty();
      case PilaPackage.EXPRESION__DERECHAS:
        return derechas != null && !derechas.isEmpty();
      case PilaPackage.EXPRESION__ENTERO:
        return entero != ENTERO_EDEFAULT;
      case PilaPackage.EXPRESION__REAL:
        return real != REAL_EDEFAULT;
      case PilaPackage.EXPRESION__NOMBRE_CALIFICADO:
        return nombreCalificado != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (operador: ");
    result.append(operador);
    result.append(", entero: ");
    result.append(entero);
    result.append(", real: ");
    result.append(real);
    result.append(')');
    return result.toString();
  }

} //ExpresionImpl
